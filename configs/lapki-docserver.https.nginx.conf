# Пример Nginx-конфигурации для размещения документации Lapki IDE 
# с поддержкой HTTPS и настройкой CORS для функционирования внешних ссылок. 

# Вам потребуется домен и SSL-сертификат. 
# Если у вас его нет, рекомендуется настроить HTTP-версию, после воспользоваться
# Certbot для автоматической настройки HTTPS:
# https://www.digitalocean.com/community/tutorials/how-to-install-nginx-on-ubuntu-22-04

# Введите слово ИСПРАВИТЬ в поиск, чтобы увидеть важные места для редактирования.

server {
        listen 80;
        # Домен, где размещена документация
        server_name lapki-doc.example.ru; # ИСПРАВИТЬ
        return 301 https://$host$request_uri;
}

map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
}

server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        # Домен, где размещена документация
        server_name lapki-doc.example.ru; # ИСПРАВИТЬ

        # При желании можно поменять путь для логирования
        access_log /var/log/nginx/lapki-doc.acc.log;
        error_log  /var/log/nginx/lapki-doc.err.log;

        # В эту директорию необходимо скопировать index.json и папку docs
        root /var/www/lapki; # ИСПРАВИТЬ, если нужно
        index index.json;

        # Настройки SSL со своим сертификатом, см. шапку файла для подробностей
        ssl_certificate /etc/ssl/example.ru.crt; # ИСПРАВИТЬ
        ssl_certificate_key /etc/ssl/example.ru.key; # ИСПРАВИТЬ
        ssl_session_cache shared:SSL:10m;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers "ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384";
        ssl_prefer_server_ciphers on;

        location / {
                # Минимально необходимая настройка CORS 
                if ($request_method = 'OPTIONS') {
                        add_header 'Access-Control-Allow-Origin' '*';
                        add_header 'Access-Control-Allow-Methods' 'GET, OPTIONS';
                        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
                        add_header 'Access-Control-Max-Age' 1728000;
                        add_header 'Content-Type' 'text/plain; charset=utf-8';
                        add_header 'Content-Length' 0;
                        return 204;
                }
                if ($request_method = 'GET') {
                        add_header 'Access-Control-Allow-Origin' '*' always;
                        add_header 'Access-Control-Allow-Methods' 'GET, OPTIONS' always;
                        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' always;
                        add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
                }

                proxy_cache_bypass $cookie_nocache $arg_nocache;
                try_files $uri $uri/ =404;
        }

}
